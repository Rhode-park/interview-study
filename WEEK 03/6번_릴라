# iOS 앱을 만들고, User Interface를 구성하는 데 필수적인 프레임워크 이름은 무엇인가?

- UIKit



## UIKit에서의 멀티 스레딩과 관련하여 주의해야 할 점이 있나요?

- iOS 앱에서는 기본적으로 UI를 메인스레드에서 업데이트 해야 합니다.

## 그렇다면 UI 작업을 왜 메인스레드에서 해야 하나요?

- 메인 런루프가 뷰의 업데이트를 관리하는 View Drawing Cycle 을 통해 뷰를 


## UIKit에서 Auto Layout이 무엇인가요? 왜 Auto Layout을 사용해야 하나요?

## UIKit에서 제공하는 주요 프로토콜 중 몇 가지를 언급해보세요.

- UITableViewDataSource
- UITableViewDelegate

## UIKit에서 다루는 사용자 이벤트 처리 방법은 어떤 것들이 있나요?

### 1. UIControl 이벤트
: UIControl 클래스를 상속받은 UI 요소들 (예: UIButton, UISlider, UITextField 등)은 사용자의 터치 및 다른 이벤트에 대한 액션을 처리하기 위해 UIControl 이벤트를 사용합니다. UIControl 이벤트에는 터치 다운, 터치 업, 값 변경 등 다양한 종류가 있으며, addTarget(_:action:for:) 메서드를 사용하여 이벤트를 처리할 대상과 메서드를 지정할 수 있습니다.

### 2. UIGestureRecognizer
: UIGestureRecognizer 클래스를 사용하여 특정 제스처를 감지하고 처리할 수 있습니다. iOS에서 제공하는 여러 제스처 (예: 탭, 스와이프, 피치, 로테이션 등)를 인식하고 적절한 액션을 수행하는 데 사용됩니다. 예를 들어, UITapGestureRecognizer를 사용하여 뷰를 탭하면 특정 동작을 실행하도록 할 수 있습니다.

### 3. Responder Chain
: iOS는 이벤트를 처리하기 위해 Responder Chain 메커니즘을 제공합니다. 이벤트가 발생하면 해당 이벤트를 받을 수 있는 UIResponder 객체를 찾아가는 방식으로 이벤트를 전달합니다. 이를 통해 View와 ViewController들이 이벤트를 적절히 처리할 수 있습니다.


## UIControl 과 UIGestureRecognizer 의 공통점과 차이점에 대해서 설명해주세요.

**공통점** 
- 사용자 이벤트를 처리하기 위해 사용된다
- ResponderChain 메커니즘을 활용하여 이벤트를 처리

**차이점**

1. 적용 대상
- **UIControl**: UIControl은 주로 UIButton, UISlider, UITextField와 같이 사용자의 직접적인 인터랙션에 의해 값이 변경되는 UI 요소들에 사용됩니다.

- **UIGestureRecognizer**: UIGestureRecognizer는 주로 여러 UIView나 UIControl과 같은 UI 요소에 대해 특정 제스처들을 인식하고 이에 따른 액션을 수행하는데 사용됩니다. 예를 들어, 특정 뷰에 탭 제스처를 추가하여 탭 동작에 대한 액션을 처리할 수 있습니다.


